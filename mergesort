void merge(int input[], int si, int ei)
{
    
     int* arr=new int[ei-si+1];
   //  int si=0,ei=size-1;
    int mid=(si+ei)/2;
    int i=si,k=0,j=mid+1;
    while(i<=mid && j<=ei)
    {
        if(input[i] < input[j])
        {
            arr[k]=input[i];
            i++;
            k++;
        }
        else
        {
            arr[k]=input[j];
            j++;
            k++;
        }
    }
    while(i<=mid){
        arr[k]=input[i];
        k++;
        i++;
    }
    while(j<=ei){
        arr[k]=input[j];
        k++;
        j++;
    }
    
    for(i=0;i<k;i++)
        input[i+si]=arr[i];
}


void mergeSort(int input[], int si,int ei){
	// Write your code here
    //if(size==0 || size==1)
      //  return ;
    if(si>=ei)
        return;
    //int si=0,ei=size-1;
    int mid=(si+ei)/2;
    mergeSort(input , si , mid);
    mergeSort(input , mid+1 , ei);
   // int* arr=new int[];
    merge(input,si,ei);
    
}

void mergeSort(int input[], int size){
     mergeSort( input, 0,size-1);
}

/*
void mergesort(int input[],int si,int ei)
{
    int mid=(si+ei)/2;
    if(si>=ei)
        return;
    mergesort(input,si,mid);
    mergesort(input,mid+1,ei);
    merge(input,si,ei);
}
void mergeSort(int input[], int size){
	// Write your code here
        mergesort(input,0,size-1);
}
