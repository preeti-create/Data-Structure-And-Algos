Pair star
Send Feedback
Given a string S, compute recursively a new string where identical chars that are adjacent in the original string are separated from each other by a "*".
Input format :
String S
Output format :
Modified string
Constraints :
0 <= |S| <= 1000
where |S| represents length of string S.
Sample Input 1 :
hello
Sample Output 1:
hel*lo
Sample Input 2 :
aaaa
Sample Output 2 :
a*a*a*a











// Change in the given string itself. So no need to return or print the changed string.
#include<cstring>

//approach 1

void pairStar(char input[]) {
    // Write your code here
    if(strlen(input)==1 || strlen(input)==0)
        return;
    
    int l=strlen(input);
    if(input[0]==input[1])
    {
        
        for(int i=l; i>=1 ;i--)
        {
            input[i+1]=input[i];
        }
        
        input[1]='*';
        
    }

    pairStar(input+1);
}
/*

//approach 2

void pairStar(char input[]) {
    // Write your code here
    int count,i;
    /*
    if(strlen(input)==1 || strlen(input)==0)
        return;
    
     if(input[0] !=input[1])
    {
         return;
     }
   
    if(input[0]==input[1])
    {
         count=0;
         i=0;
      //  input[1]='*';
        while(input[i] != '\0')
        {
            count++;
            i++;
        }
        for(i=count+1;i>=1;i--)
        {
            input[i+1]=input[i];
        }
        
        input[1]='*';
    }

    pairStar(input+1);
    
    
    
     if(strlen(input)==1 || strlen(input)==0)
        return;
     pairStar(input+1);
    
    if(input[0]==input[1])
    {
        // count=0;
         //i=0;
      //  input[1]='*';
       /* while(input[i] != '\0')
        {
            count++;
            i++;
        }
        for(int i=strlen(input);i>=1;i--)
        {
            input[i+1]=input[i];
        }
        
        input[1]='*';
    }
}
*/

 
