Return Permutations - String
Send Feedback
Given a string S, find and return all the possible permutations of the input string.
Note 1 : The order of permutations is not important.
Note 2 : If original string contains duplicate characters, permutations will also be duplicates.
Input Format :
String S
Output Format :
All permutations (in different lines)
Sample Input :
abc
Sample Output :
abc
acb
bac
bca
cab
cba





	/*
#include <string>
using namespace std;

int returnPermutations(string input, string output[]){
    
   	/* Don't write main() function.
	 * Don't read input, it is passed as function argument.
	 * Print output as specified in the question
	*/

/*
    if(input.size()==0)
        return 1;
    
    int size = returnPermutations(input.substr(1),output);
    
    char first=input[0];
    int k=0;
    
    for(int i =0; i<size; i++)
    {
        for(int j=0; j<size+1; j++)
        {
            if(j==0)
            output[k++]=input.substr(1) + first;
           // k++;
            output[k++]=input.substr(0,j-1) + first + input.substr(j+1);
        }
    }
    
    return k;
}

*/

#include <string>
using namespace std;

int returnPermutations(string input, string output[]){
    
   	/* Don't write main() function.
	 * Don't read input, it is passed as function argument.
	 * Print output as specified in the question
	*/
    if(input.size()==0){
         output[0]="";
        return 1;
    }
    string smallop[100000];
    int size = returnPermutations(input.substr(1),smallop);
    
    char first=input[0];
    int k=0;
    
    for(int i =0; i<size; i++)
    {
        for(int j=0; j<=smallop[i].length(); j++)
        {
           // k++;
            output[k++]=smallop[i].substr(0,j) + input[0] + smallop[i].substr(j);
        }
    }
    
    return k;
}

