Quick Sort Code
Send Feedback
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 









int partition(int input[], int si, int ei)
{
    int count=0;
    
    for(int i=si+1; i<=ei ;i++)
    {
        if(input[si] >= input[i])
            count++;
    }
    int t=input[si];
    input[si]=input[count+si];
    input[count+si]=t;
    
    int mid= count+si ;
    
    int i=si;
    int j=ei;
    
    while(i<=mid && j>=mid )
    {
        if(input[i] <= input[mid])
            i++;
        else if(input[j] > input[mid])
            j--;
        else
        {
            int t=input[i];
            input[i] = input[j];
            input[j] = t;
            
            i++;
            j--;
            
        }
    }
    
    
    
    return mid;
    
}

void quicksort(int input[], int si, int ei)
{
    if(si>=ei)
        return;
    int pi=partition(input,si,ei);
    quicksort(input,si,pi-1);
    quicksort(input,pi+1, ei);
}


void quickSort(int input[], int size) {
  /* Don't write main().
     Don't read input, it is passed as function argument.
     Change in the given array itself.
     Taking input and printing output is handled automatically.
  */
    int si=0,ei=size-1;
    quicksort(input,si,ei);

}
