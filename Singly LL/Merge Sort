node* mearge(node *head1, node *head2){
    node *fh = NULL;
    node *ft = NULL;
    while(head1 != NULL && head2 != NULL){
        if(head1 -> data < head2 -> data){
            if(fh == NULL){
                fh = head1;
                ft = head1;
            }else{
                ft -> next = head1;
                ft = head1;
            }
            head1 = head1 -> next;
        }else{
            if(fh == NULL){
                fh = head2;
                ft = head2;
            }else{
                ft -> next = head2;
                ft = head2;
            }
            head2 = head2 -> next;
        }
    }
    if(head1 != NULL){
        while(head1 != NULL){
            ft -> next = head1;
            ft = head1;
            head1 = head1 -> next;
        }
    }
    if(head2 != NULL){
        while(head2 != NULL){
            ft -> next = head2;
            ft = head2;
            head2 = head2 -> next;
        }
    }
    ft -> next = NULL;
    return fh;
}
node * middle(node * head)
{
   node * slow=head;
    node *fast;
    if(head!=NULL)
    {
        fast=head->next;
    }
    while(fast!=NULL && fast->next!=NULL)
    {
        fast=fast->next->next;
        slow=slow->next;
    }
    return slow; 
}
node* mergeSort(node *head) {
   if(head==NULL || head->next==NULL)
        return head;
    node *mid=middle( head);
    node *head1=head;
    node *head2=mid->next;
    mid->next=NULL;
     head1=mergeSort(head1);
     head2 =mergeSort(head2);
    node *finalhead=mearge( head1,  head2);
    return finalhead;
    }
 
